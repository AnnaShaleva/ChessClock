// <auto-generated />
using System;
using ChessClock.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ChessClock.DAL.Migrations
{
    [DbContext(typeof(PostgresContext))]
    [Migration("20190304090155_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ChessClock.DAL.Models.DalMove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("End");

                    b.Property<int>("PlayerId");

                    b.Property<DateTime>("Start");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("ChessClock.DAL.Models.DalPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("NumberInQueue");

                    b.Property<string>("SessionId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ChessClock.DAL.Models.DalSession", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrentPlayerId");

                    b.Property<int>("Status");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CurrentPlayerId")
                        .IsUnique();

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("ChessClock.DAL.Models.DalMove", b =>
                {
                    b.HasOne("ChessClock.DAL.Models.DalPlayer", "Player")
                        .WithMany("Moves")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ChessClock.DAL.Models.DalPlayer", b =>
                {
                    b.HasOne("ChessClock.DAL.Models.DalSession", "Session")
                        .WithMany("Players")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ChessClock.DAL.Models.DalSession", b =>
                {
                    b.HasOne("ChessClock.DAL.Models.DalPlayer", "CurrentPlayer")
                        .WithOne()
                        .HasForeignKey("ChessClock.DAL.Models.DalSession", "CurrentPlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
